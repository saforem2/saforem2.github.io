[
  {
    "objectID": "qmd/slides.html",
    "href": "qmd/slides.html",
    "title": "Recent Talks",
    "section": "",
    "text": "\\hspace{2pt} MLMC: Machine Learning Monte Carlo @ Lattice 2023 (07/2023)\n\n\n\n\n\n\n\n&lt;p&gt;\nYour browser does not support iframes.\n&lt;/p&gt;\n\n\n\n\n\n\n\n\n\n\n \\hspace{2pt} Generative Modeling and Efficient Sampling @ PASC23 (07/2023)\n\n\n\n\n\n\n\n\n&lt;p&gt;\nYour browser does not support iframes.\n&lt;/p&gt;\n\n\n\n\n\n\n\n\n\n\n \\hspace{2pt} Efficient Sampling for Lattice Gauge Theory @ Deep Fridays @ U. Bologna (04/2023)\n\n\n\n\n\n\n\n&lt;p&gt;\nYour browser does not support iframes.\n&lt;/p&gt;\n\n\n\n\n\n\n\n\n\n\n \\hspace{2pt} Large Scale Training @ Introduction to AI4Science on Supercomputers (ALCF) (11/2022)\n\n\n\n\n\n\n\n&lt;p&gt;\nYour browser does not support iframes.\n&lt;/p&gt;\n\n\n\n\n\n\n\n\n\n\n \\hspace{2pt} Hyperparameter Management @ ALCF Simulation, Data, and Learning Workshop (10/2022)\n\n\n\n\n\n\n\n&lt;p&gt;\nYour browser does not support iframes.\n&lt;/p&gt;\n\n\n\n\n\n\n\n\n\n\n \\hspace{2pt} Statistical Learning @ ATPESC 2022 (08/2022)\n\n\n\n\n\n\nüìï accompanying notebook\n\n\n&lt;p&gt;\nYour browser does not support iframes.\n&lt;/p&gt;\n\n\n\n\n\n\n\n\n\n\n \\hspace{2pt} Scientific Data Science: An Emerging Symbiosis @ ANL (05/2022)\n\n\n\n\n\n\n\n&lt;p&gt;\nYour browser does not support iframes.\n&lt;/p&gt;\n\n\n\n\n\n\n\n\n\n\n \\hspace{2pt} Machine Learning in HEP @ UNC Greensboro (03/2022)\n\n\n\n\n\n\nMachine Learning in HEP, at UNC Greensboro, March 2022\n\n\n&lt;p&gt;\nYour browser does not support iframes.\n&lt;/p&gt;\n\n\n\n\n\n\n\n\n\n\n \\hspace{2pt} Accelerated Sampling Methods for Lattice Gauge Theory, @ BNL / DWQ @ 25 (12/2021)\n\n\n\n\n\n\n\n&lt;p&gt;\nYour browser does not support iframes.\n&lt;/p&gt;\n\n\n\n\n\n\n\n\n\n\n\n \\hspace{2pt} Training Topological Samplers for Lattice Gauge Theory @ ML4HEP, ECT* Trento (09/2021)\n\n\n\n\n\n\n\n&lt;p&gt;\nYour browser does not support iframes.\n&lt;/p&gt;\n\n\n\n\n\n\n\n\n\n\n \\hspace{2pt} l2hmc-qcd @ MIT Lattice Group Seminar (2021)\n\n\n\n\n\n\nl2hmc-qcd at the MIT Lattice Group Seminar, 2021\n\n\n\n\n\n\n\n\n\n\n \\hspace{2pt} Deep Learning HMC for Improved Gauge Generation @ ML in LQCD Workshop (2021)\n\n\n\n\n\n\nDeep Learning HMC for Improved Gauge Generation to the Machine Learning Techniques in Lattice QCD Workshop, 2021\n\n\n\n\n\n\n\n\n\n\n \\hspace{2pt} Machine Learning for Lattice QCD (2020)\n\n\n\n\n\n\nMachine Learning for Lattice QCD at the University of Iowa, 2020\n\n\n&lt;p&gt;\nYour browser does not support iframes.\n&lt;/p&gt;\n\n\n\n\n\n\n\n\n\n\n \\hspace{2pt} Machine Learning Inspired Analysis of Ising Model @ Lattice (2018)\n\n\n\n\n\n\n&lt;p&gt;\nYour browser does not support iframes.\n&lt;/p&gt;\n\n\n\n\n\n\n\n\n\n\n\n \\hspace{2pt} Machine Learning Analysis of Ising Worms (2017)\n\n\n\n\n\n\nMachine Learning Analysis of Ising Worms at Brookhaven National Laboratory, 2017\n\n\n\n\n\n\n\n\n Back to topCitationBibTeX citation:@online{foreman2023,\n  author = {Foreman, Sam},\n  title = {Personal {Website}},\n  date = {2023-08-19},\n  url = {https://saforem2.github.io},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nForeman, Sam. 2023. ‚ÄúPersonal Website.‚Äù August 19, 2023. https://saforem2.github.io."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Sam Foreman ",
    "section": "",
    "text": "PhD\nPhysics\nUniversity of Iowa\n2019\n\n\nB.Sc\nPhysics\nUIUC\n2015\n\n\nB.Sc\nMath\nUIUC\n2015\n\n\n\n\n\n\n\n\n\n\nAssistant Computational Scientist\nALCF\n2022\n*\n\n\n\nPostdoc\nALCF\n2019\n2022\n\n\n\nGraduate Researcher\nANL\n2018\n2019\nI‚Äôm generally interested in the application of machine learning to computational problems in science, particularly within the context of high performance computing.\nAs a member of the Data Science Group at ALCF, I work on:\nMy current research focuses on using deep generative modeling to help build better sampling algorithms in lattice gauge theory. In particular, I‚Äôm interested in building gauge equivariant neural network architectures and using inductive priors to incorporate physical symmetries into machine learning models.\nI received my PhD in Physics from the University of Iowa in 2019 and my thesis was on Learning Better Physics: A Machine Learning Approach to Lattice Gauge Theory. Prior to this, I completed two bachelors degrees (Engineering Physics and Applied Mathematics, 2015) from The University of Illinois at Urbana-Champaign. My undergraduate dissertation was titled Energy Storage in Quantum Resonators and was supervised by Professor Alfred H√ºbler within the Center for Complex Systems Research at UIUC."
  },
  {
    "objectID": "index.html#wait-theres-more",
    "href": "index.html#wait-theres-more",
    "title": "About Me",
    "section": "Wait, there‚Äôs more!",
    "text": "Wait, there‚Äôs more!\n\nOrganizer for Machine Learning and Quantum Computing for Earth Sciences at 17th U. S. National Congress on Computational Mechanics, July 2023\nOrganizer for SC23 Workshop: High Performance Python for Science at Scale (HPPSS), November 2023"
  },
  {
    "objectID": "index.html#appendix",
    "href": "index.html#appendix",
    "title": "About Me",
    "section": "Appendix",
    "text": "Appendix\n\nfrom datetime import date\nprint(f\"Last updated: {date.today().strftime('%d %B %y')}\")\n\nLast updated: 19 August 23"
  },
  {
    "objectID": "qmd/blog/2023-08-19.html",
    "href": "qmd/blog/2023-08-19.html",
    "title": "About Me (alt)",
    "section": "",
    "text": "I‚Äôm currently an Assistant Computational Scientist working in the data science group at the Leadership Computing Facility at Argonne National Laboratory.\n\n\n\n   \n\n\n\n\n\nI‚Äôm generally interested in the application of machine learning to computational problems in physics, particularly within the context of high performance computing. My current research focuses on using deep generative modeling to help build better sampling algorithms in lattice gauge theory. In particular, I‚Äôm interested in building gauge equivariant neural network architectures and using inductive priors to incorporate physical symmetries into machine learning models.\nI received my PhD in Physics from the University of Iowa in 2019 and my thesis was on Learning Better Physics: A Machine Learning Approach to Lattice Gauge Theory. Prior to this, I completed two bachelors degrees (Engineering Physics and Applied Mathematics, 2015) from The University of Illinois at Urbana-Champaign. My undergraduate dissertation was titled Energy Storage in Quantum Resonators and was supervised by Professor Alfred H√ºbler within the Center for Complex Systems Research at UIUC.\n\n\n\n\n\n\n\nRecent Talks\n\n\n\n\n\nYou can get a live view of some of my recent talks  here"
  },
  {
    "objectID": "qmd/blog/2023-08-19.html#wait-theres-more",
    "href": "qmd/blog/2023-08-19.html#wait-theres-more",
    "title": "About Me (alt)",
    "section": "Wait, there‚Äôs more!",
    "text": "Wait, there‚Äôs more!\n\nOrganizer for Machine Learning and Quantum Computing for Earth Sciences at 17th U. S. National Congress on Computational Mechanics, July 2023\nOrganizer for SC23 Workshop: High Performance Python for Science at Scale (HPPSS), November 2023"
  },
  {
    "objectID": "index.html#recent-work",
    "href": "index.html#recent-work",
    "title": "About Me",
    "section": "Recent Work",
    "text": "Recent Work\n\nS. Foreman Exploratory Analysis of Climate Data with ClimRR, Intro to HPC Bootcamp @ NERSC, August 7, 2023\n\nM. Zvyagin et. al., GenSLMs: Genome-scale language models reveal SARS-CoV-2 evolutionary dynamics, Oct 2022\n\n ACM Gordon Bell Special Prize for HPC-Based COVID-19 Research\n\n\nA.S. Kronfeld et al.¬†Lattice QCD and Particle Physics, July 15, 2022\n\nD. Boyda, S. Cal√≠, S. Foreman, et al., Applications of ML to Lattice QFT arXiv:2202.05838, Feb 2022\n\nS. Foreman, X.Y. Jin, J.C. Osborn, LeapFrogLayers: Trainable Framework for Effective Sampling, Lattice, 2021\n\nS. Foreman et al.HMC with Normalizing Flows, slides, Lattice, 2021\n\nS. Foreman, X.Y. Jin, & J.C. Osborn, Deep Learning Hamiltonian Monte Carlo (+ poster) at SimDL Workshop @ ICLR, 2021\n\nS. Foreman, X.Y. Jin, & J.C. Osborn, Machine Learning and Neural Networks for Field Theory SnowMass, 2020\n\nS. Foreman et al.¬†Examples of renormalization group transformations for image sets Physical Review E., 2018\n\nS. Foreman et al.¬†RG inspired Machine Learning for lattice field theory arXiv:1710.02079, 2017\n\nS. Foreman et al.¬†Large Energy Density in Three-Plate Nanocapacitors due to Coulomb Blockade J. Appl. Phys, 2018"
  },
  {
    "objectID": "index.html#recent-talks",
    "href": "index.html#recent-talks",
    "title": "About Me",
    "section": "Recent Talks",
    "text": "Recent Talks\n\n\n\n\n\n\nMLMC: Machine Learning for Monte Carlo, at Lattice 2023, July 2023\nGenerative Modeling and Efficient Sampling, at PASC23, July 2023\nEfficient Sampling for Lattice Gauge Theory, at Deep Fridays @ U. Bologna, April 2023\nLarge Scale Training, at Introduction to AI-driven Science on Supercomputers: A Student Training Series, November 2022\nHyperparameter Management, at 2022 ALCF Simulation, Data, and Learning Workshop, October 2022\nStatistical Learning, at ATPESC 2022, August 2022 üìï accompanying notebook\nScientific Data Science: An Emerging Symbiosis, at Argonne National Laboratory, May 2022\nMachine Learning in HEP, at UNC Greensboro, March 2022\nAccelerated Sampling Methods for Lattice Gauge Theory, at BNL-HET& RBRC Joint Workshop ‚ÄúDWQ @ 25‚Äù, Dec 2021\nTraining Topological Samplers for Lattice Gauge Theory, ML4HEP, on and off the Lattice @ ECT* Trento, Sep 2021\nl2hmc-qcd at the MIT Lattice Group Seminar, 2021\nDeep Learning HMC for Improved Gauge Generation to the Machine Learning Techniques in Lattice QCD Workshop, 2021\nMachine Learning for Lattice QCD at the University of Iowa, 2020\nMachine learning inspired analysis of the Ising model transition to Lattice, 2018\nMachine Learning Analysis of Ising Worms at Brookhaven National Laboratory, 2017"
  },
  {
    "objectID": "index.html#active-projects",
    "href": "index.html#active-projects",
    "title": "About Me",
    "section": "Active Projects",
    "text": "Active Projects\n\n                \n\n\n\n\n\n\n\nl2hmc-qcd\n\n\n\n\n\n\n\n GitHub repo"
  },
  {
    "objectID": "index.html#fa-solid-person-chalkboard-recent-talks",
    "href": "index.html#fa-solid-person-chalkboard-recent-talks",
    "title": "Sam Foreman ",
    "section": " Recent Talks",
    "text": "Recent Talks\n\n\n\n\n\n\nMLMC: Machine Learning for Monte Carlo, at Lattice 2023, July 2023\nGenerative Modeling and Efficient Sampling, at PASC23, July 2023\nEfficient Sampling for Lattice Gauge Theory, at Deep Fridays @ U. Bologna, April 2023\nLarge Scale Training, at Introduction to AI-driven Science on Supercomputers: A Student Training Series, November 2022\nHyperparameter Management, at 2022 ALCF Simulation, Data, and Learning Workshop, October 2022\nStatistical Learning, at ATPESC 2022, August 2022 üìï accompanying notebook\nScientific Data Science: An Emerging Symbiosis, at Argonne National Laboratory, May 2022\nMachine Learning in HEP, at UNC Greensboro, March 2022\nAccelerated Sampling Methods for Lattice Gauge Theory, at BNL-HET& RBRC Joint Workshop ‚ÄúDWQ @ 25‚Äù, Dec 2021\nTraining Topological Samplers for Lattice Gauge Theory, ML4HEP, on and off the Lattice @ ECT* Trento, Sep 2021\nl2hmc-qcd at the MIT Lattice Group Seminar, 2021\nDeep Learning HMC for Improved Gauge Generation to the Machine Learning Techniques in Lattice QCD Workshop, 2021\nMachine Learning for Lattice QCD at the University of Iowa, 2020\nMachine learning inspired analysis of the Ising model transition to Lattice, 2018\nMachine Learning Analysis of Ising Worms at Brookhaven National Laboratory, 2017"
  },
  {
    "objectID": "index.html#fa-solid-newspaper-recent-work",
    "href": "index.html#fa-solid-newspaper-recent-work",
    "title": "Sam Foreman ",
    "section": " Recent Work",
    "text": "Recent Work\n\nS. Foreman Exploratory Analysis of Climate Data with ClimRR, Intro to HPC Bootcamp @ NERSC, August 7, 2023\n\nM. Zvyagin et. al., GenSLMs: Genome-scale language models reveal SARS-CoV-2 evolutionary dynamics, Oct 2022\n\n ACM Gordon Bell Special Prize for HPC-Based COVID-19 Research\n\n\nA.S. Kronfeld et al.¬†Lattice QCD and Particle Physics, July 15, 2022\n\nD. Boyda, S. Cal√≠, S. Foreman, et al., Applications of ML to Lattice QFT arXiv:2202.05838, Feb 2022\n\nS. Foreman, X.Y. Jin, J.C. Osborn, LeapFrogLayers: Trainable Framework for Effective Sampling, Lattice, 2021\n\nS. Foreman et al.HMC with Normalizing Flows, slides, Lattice, 2021\n\nS. Foreman, X.Y. Jin, & J.C. Osborn, Deep Learning Hamiltonian Monte Carlo (+ poster) at SimDL Workshop @ ICLR, 2021\n\nS. Foreman, X.Y. Jin, & J.C. Osborn, Machine Learning and Neural Networks for Field Theory SnowMass, 2020\n\nS. Foreman et al.¬†Examples of renormalization group transformations for image sets Physical Review E., 2018\n\nS. Foreman et al.¬†RG inspired Machine Learning for lattice field theory arXiv:1710.02079, 2017\n\nS. Foreman et al.¬†Large Energy Density in Three-Plate Nanocapacitors due to Coulomb Blockade J. Appl. Phys, 2018"
  },
  {
    "objectID": "index.html#fa-brand-square-github-active-projects",
    "href": "index.html#fa-brand-square-github-active-projects",
    "title": "About Me",
    "section": " Active Projects",
    "text": "Active Projects\n\n                \n\n\n\n\n\n\n\nl2hmc-qcd\n\n\n\n\n\n\n\n GitHub repo"
  },
  {
    "objectID": "index.html#fa-solid-square-github-active-projects",
    "href": "index.html#fa-solid-square-github-active-projects",
    "title": "About Me",
    "section": " Active Projects",
    "text": "Active Projects\n\n                \n\n\n\n\n\n\n\nl2hmc-qcd\n\n\n\n\n\n\n\n GitHub repo"
  },
  {
    "objectID": "index.html#fa-brand-github-alt-active-projects",
    "href": "index.html#fa-brand-github-alt-active-projects",
    "title": "About Me",
    "section": " Active Projects",
    "text": "Active Projects\n\n                \n\n\n\n\n\n\n\nl2hmc-qcd\n\n\n\n\n\n\n\n GitHub repo"
  },
  {
    "objectID": "index.html#fa-brand-github-active-projects",
    "href": "index.html#fa-brand-github-active-projects",
    "title": "About Me",
    "section": " Active Projects",
    "text": "Active Projects\n\n                \n\n\n\n\n\n\n\nl2hmc-qcd\n\n\n\n\n\n\n\n GitHub repo"
  },
  {
    "objectID": "index.html#fa-brands-square-github-active-projects",
    "href": "index.html#fa-brands-square-github-active-projects",
    "title": "About Me",
    "section": " Active Projects",
    "text": "Active Projects\n\n                \n\n\n\n\n\n\n\nl2hmc-qcd\n\n\n\n\n\n\n\n GitHub repo"
  },
  {
    "objectID": "index.html#fa-brands-github-alt-active-projects",
    "href": "index.html#fa-brands-github-alt-active-projects",
    "title": "Sam Foreman ",
    "section": " Active Projects",
    "text": "Active Projects\n\n                \n\n\n\n\n\n\n\nl2hmc-qcd\n\n\n\n\n\n\n\n GitHub repo"
  },
  {
    "objectID": "index.html#fa-solid-bullhorn-wait-theres-more",
    "href": "index.html#fa-solid-bullhorn-wait-theres-more",
    "title": "Sam Foreman ",
    "section": " Wait, there‚Äôs more!",
    "text": "Wait, there‚Äôs more!\n\nOrganizer for Machine Learning and Quantum Computing for Earth Sciences at 17th U. S. National Congress on Computational Mechanics, July 2023\nOrganizer for SC23 Workshop: High Performance Python for Science at Scale (HPPSS), November 2023"
  },
  {
    "objectID": "index.html#fa-solid-hourglass-end-appendix",
    "href": "index.html#fa-solid-hourglass-end-appendix",
    "title": "Sam Foreman ",
    "section": " Appendix",
    "text": "Appendix\n\nfrom datetime import date\nprint(f\"Last updated: {date.today().strftime('%d %B %y')}\")\n\nLast updated: 08 September 23"
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "üëã I‚Äôm Sam",
    "section": "",
    "text": "University of Iowa | Iowa City, IA Phd. Physics | Sept 2015 - May 2019\nUniversity of Illinois at Urbana-Champaign | Urbana, IL B.S. Engineering Physics | Sept 2010 - May 2015\nUniversity of Illinois at Urbana-Champaign | Urbana, IL B.S. Applied Mathematics | Sept 2010 - May 2015"
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "üëã I‚Äôm Sam",
    "section": "",
    "text": "Argonne National Laboratory / ALCF | Computational Scientist | June 2022 - present\nArgonne Leadership Computing Facility (ALCF) | Postdoc | June 2019 - June 2022"
  },
  {
    "objectID": "index.html#fa-solid-server-about-me",
    "href": "index.html#fa-solid-server-about-me",
    "title": " Sam Foreman",
    "section": " About Me",
    "text": "About Me\nI make science happen on supercomputers.\nI‚Äôm currently an Assistant Computational Scientist working in the data science group at the Leadership Computing Facility at Argonne National Laboratory."
  },
  {
    "objectID": "qmd/blog/quarto-reveal.html",
    "href": "qmd/blog/quarto-reveal.html",
    "title": "How to make dope slides",
    "section": "",
    "text": "By far the most common question I get after I give a talk is, ‚Äúhow did you make those slides?‚Äù\n\n\n\n\n\n\n \\hspace{2pt} MLMC: Machine Learning Monte Carlo @ Lattice 2023 (07/2023)\n\n\n\n\n\n\n&lt;p&gt;\nYour browser does not support iframes.\n&lt;/p&gt;\n\n\n\n\nAfter promising on twitter, I decided to make a blog post about how I make my slides.\n\nHonestly 99% of the work is done automatically by Quarto.\nI‚Äôve made a GitHub repo  saforem2/slides-template that contains the theme + style I use for my slides.\n\n\n\n\n\n\n \\hspace{2pt} Slides Template (08/2023)\n\n\n\n\n\n\n&lt;p&gt;\nYour browser does not support iframes.\n&lt;/p&gt;\n\n\n\n\n\n\n\nReveal Themes\nUsing Pandoc fenced divs\nSlidecraft 101: Colors and Fonts\nBeautiful Reports and Presentations with Quarto\n Quarto Clean Theme"
  },
  {
    "objectID": "qmd/posts.html",
    "href": "qmd/posts.html",
    "title": "Listing Example",
    "section": "",
    "text": "Intro to HPC Bootcamp @ Nersc: Climate Analysis with ClimRR (Foreman 2023)\nl2hmc-qcd \n\nYou can review the following documents for additional information:\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Title\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\nDate\n\n\nTitle\n\n\nAuthor\n\n\n\n\n\n\nAug 21, 2023\n\n\nHow to make dope slides\n\n\nSam Foreman \n\n\n\n\nAug 19, 2023\n\n\nAbout Me (alt)\n\n\nSam Foreman \n\n\n\n\n\n\nNo matching items\n\n\nLearn more about Quarto here."
  },
  {
    "objectID": "qmd/blog/quarto-reveal.html#references",
    "href": "qmd/blog/quarto-reveal.html#references",
    "title": "How to make dope slides",
    "section": "",
    "text": "Reveal Themes\nUsing Pandoc fenced divs\nSlidecraft 101: Colors and Fonts\nBeautiful Reports and Presentations with Quarto\n Quarto Clean Theme"
  },
  {
    "objectID": "qmd/posts.html#external-links",
    "href": "qmd/posts.html#external-links",
    "title": "Listing Example",
    "section": "",
    "text": "Intro to HPC Bootcamp @ Nersc: Climate Analysis with ClimRR (Foreman 2023)\nl2hmc-qcd \n\nYou can review the following documents for additional information:\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Title\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\nDate\n\n\nTitle\n\n\nAuthor\n\n\n\n\n\n\nAug 21, 2023\n\n\nHow to make dope slides\n\n\nSam Foreman \n\n\n\n\nAug 19, 2023\n\n\nAbout Me (alt)\n\n\nSam Foreman \n\n\n\n\n\n\nNo matching items\n\n\nLearn more about Quarto here."
  },
  {
    "objectID": "qmd/dsblog.html#results",
    "href": "qmd/dsblog.html#results",
    "title": "Long Sequence Lengths",
    "section": "Results",
    "text": "Results\n\n\n\n\n\n\n\n\n\n\nMODEL_SIZE\nGPUs\nImplementation\nSEQ_LEN (k)\nImprovement\n\n\n\n\n25B\n32\nOLD\n28\n4.5714285714\n\n\n\n\nNVIDIA\n14\n9.1428571429\n\n\n\n\nNEW\n128\n1\n\n\n25B\n64\nOLD\n32\n12\n\n\n\n\nNVIDIA\n46\n8.347826087\n\n\n\n\nNEW\n384\n1\n\n\n25B\n128\nOLD\n32\n14\n\n\n\n\nNVIDIA\n52\n8.6153846154\n\n\n\n\nNEW\n448\n1\n\n\n33B\n32\nOLD\n36\n5.3333333333\n\n\n\n\nNVIDIA\n26\n7.3846153846\n\n\n\n\nNEW\n192\n1\n\n\n33B\n64\nOLD\n42\n10.66666666\n\n\n\n\nNVIDIA\n48\n9.333333333\n\n\n\n\nNEW\n448\n1\n\n\n33B\n128\nOLD\n42\n12.1904761905\n\n\n\n\nNVIDIA\n52\n9.8461538462\n\n\n\n\nNEW\n512\n1"
  },
  {
    "objectID": "qmd/dsblog.html",
    "href": "qmd/dsblog.html",
    "title": "Loooooooong Sequence Lengths",
    "section": "",
    "text": "PRE-RELEASE\n\n\n\n\n\nI‚Äôve kept in the (executable) code blocks for the time being (just to show how I‚Äôm generating the bar plots in Figure¬†1) but these can be ommitted in the actual README\n\n\n\n\ngpus = ('32', '64', '128')\n\ndata = {\n    '25B': {\n        'Old': (28, 32, 32),\n        'Nvidia': (14, 46, 52),\n        'New': (460, 384, 448),\n    },\n    '33B': {\n        'Old': (36, 42, 42),\n        'Nvidia': (26, 48, 52),\n        'New': (192, 448, 512),\n    }\n}\n\n\n\n\nx = np.arange(len(gpus))\nwidth = 0.25\nmultiplier = 0\n\noutdir = Path(os.getcwd()).joinpath('assets')\noutdir.mkdir(exist_ok=True, parents=True)\n\nfrom toolbox import COLORS\ncolors = {\n    'Old': COLORS['red'],\n    'Nvidia': COLORS['green'],\n    'New': COLORS['blue']\n}\nfor idx, (model_size, d) in enumerate(data.items()):\n    multiplier = 0\n    figure, axes = plt.subplots(layout='constrained')\n    fig = plt.gcf()\n    ax = plt.gca()\n    for label, value in d.items():\n        offset = width * multiplier\n        rects = ax.bar(x + offset, value, width, label=label, color=colors[label])\n        ax.bar_label(rects, padding=3)\n        multiplier += 1\n    ax.set_xlabel('GPUs', fontsize='large')\n    ax.set_title(f'{model_size} Model', fontsize='large')\n    ax.set_xticks(x + width, gpus)\n    if idx == 0:\n        ax.set_ylabel('Sequence Length (k)', fontsize='large')\n    if idx &gt; 0:\n        ax.legend(loc='best', ncols=1, frameon=True, bbox_to_anchor=(1, 1.05))\n    save_figure(fname=f'{model_size}', outdir=outdir)\n    _ = plt.show()\n\n\n\n\n\n\n25B Model\n\n\n\n\n\n\n\n33B Model\n\n\n\n\n\n\nFigure¬†1: Maximum Sequence Lengths Achievable across different implementations, model sizes and GPUs.\nIn each case, the new (current) implementation significantly outperforms both NVIDIA/Megatron-LM as well as our previous implementation.\n\n\n\n\n\nimport pandas as pd\nfrom toolbox import get_console\nconsole = get_console()\ndf = pd.read_csv('./data.csv')\ndf\n\n\n\n\n\n\n\n\nMODEL_SIZE\nGPUs\nImplementation\nSEQ_LEN (k)\nImprovement\n\n\n\n\n0\n25B\n32\nOLD\n28\n4.571429\n\n\n1\n25B\n32\nNVIDIA\n14\n9.142857\n\n\n2\n25B\n32\nNEW\n128\n1.000000\n\n\n3\n25B\n64\nOLD\n32\n12.000000\n\n\n4\n25B\n64\nNVIDIA\n46\n8.347826\n\n\n5\n25B\n64\nNEW\n384\n1.000000\n\n\n6\n25B\n128\nOLD\n32\n14.000000\n\n\n7\n25B\n128\nNVIDIA\n52\n8.615385\n\n\n8\n25B\n128\nNEW\n448\n1.000000\n\n\n9\n33B\n32\nOLD\n36\n5.333333\n\n\n10\n33B\n32\nNVIDIA\n26\n7.384615\n\n\n11\n33B\n32\nNEW\n192\n1.000000\n\n\n12\n33B\n64\nOLD\n42\n10.666667\n\n\n13\n33B\n64\nNVIDIA\n48\n9.333333\n\n\n14\n33B\n64\nNEW\n448\n1.000000\n\n\n15\n33B\n128\nOLD\n42\n12.190476\n\n\n16\n33B\n128\nNVIDIA\n52\n9.846154\n\n\n17\n33B\n128\nNEW\n512\n1.000000\n\n\n\n\n\n\n\nFigure¬†2: Maximum Sequence Length Results"
  },
  {
    "objectID": "qmd/dsblog.html#new1-results",
    "href": "qmd/dsblog.html#new1-results",
    "title": "Long Sequence Lengths",
    "section": "",
    "text": "&lt;figcaption&gt;Figure¬†1: &lt;strong&gt;?(caption)&lt;/strong&gt;&lt;/figcaption&gt;\n&lt;/figure&gt;\n&lt;/div&gt;\n&lt;/section&gt;\n&lt;section id=\"initial2-results\" class=\"level2\"&gt;\n&lt;h2&gt;Initial[^2] Results&lt;/h2&gt;\n&lt;div class=\"cell\" data-execution_count=\"1\"&gt;\n&lt;div class=\"sourceCode\" id=\"cb1\"&gt;&lt;pre class=\"sourceCode numberSource python cell-code number-lines\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb1-1\"&gt;&lt;a href=\"#cb1-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; os&lt;/span&gt;\n&lt;span id=\"cb1-2\"&gt;&lt;a href=\"#cb1-2\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; numpy &lt;span class=\"im\"&gt;as&lt;/span&gt; np&lt;/span&gt;\n&lt;span id=\"cb1-3\"&gt;&lt;a href=\"#cb1-3\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; datetime&lt;/span&gt;\n&lt;span id=\"cb1-4\"&gt;&lt;a href=\"#cb1-4\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;from&lt;/span&gt; typing &lt;span class=\"im\"&gt;import&lt;/span&gt; Tuple&lt;/span&gt;\n&lt;span id=\"cb1-5\"&gt;&lt;a href=\"#cb1-5\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span class=\"im\"&gt;as&lt;/span&gt; plt&lt;/span&gt;\n&lt;span id=\"cb1-6\"&gt;&lt;a href=\"#cb1-6\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;from&lt;/span&gt; pathlib &lt;span class=\"im\"&gt;import&lt;/span&gt; Path&lt;/span&gt;\n&lt;span id=\"cb1-7\"&gt;&lt;a href=\"#cb1-7\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;from&lt;/span&gt; toolbox &lt;span class=\"im\"&gt;import&lt;/span&gt; set_plot_style&lt;/span&gt;\n&lt;span id=\"cb1-8\"&gt;&lt;a href=\"#cb1-8\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; seaborn &lt;span class=\"im\"&gt;as&lt;/span&gt; sns&lt;/span&gt;\n&lt;span id=\"cb1-9\"&gt;&lt;a href=\"#cb1-9\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb1-10\"&gt;&lt;a href=\"#cb1-10\"&gt;&lt;/a&gt;sns.set_context(&lt;span class=\"st\"&gt;&#39;talk&#39;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb1-11\"&gt;&lt;a href=\"#cb1-11\"&gt;&lt;/a&gt;set_plot_style()&lt;/span&gt;\n&lt;span id=\"cb1-12\"&gt;&lt;a href=\"#cb1-12\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb1-13\"&gt;&lt;a href=\"#cb1-13\"&gt;&lt;/a&gt;&lt;span class=\"kw\"&gt;def&lt;/span&gt; save_figure(&lt;/span&gt;\n&lt;span id=\"cb1-14\"&gt;&lt;a href=\"#cb1-14\"&gt;&lt;/a&gt;        fname: &lt;span class=\"bu\"&gt;str&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb1-15\"&gt;&lt;a href=\"#cb1-15\"&gt;&lt;/a&gt;        outdir: os.PathLike,&lt;/span&gt;\n&lt;span id=\"cb1-16\"&gt;&lt;a href=\"#cb1-16\"&gt;&lt;/a&gt;):&lt;/span&gt;\n&lt;span id=\"cb1-17\"&gt;&lt;a href=\"#cb1-17\"&gt;&lt;/a&gt;    pngdir &lt;span class=\"op\"&gt;=&lt;/span&gt; Path(outdir).joinpath(&lt;span class=\"st\"&gt;&#39;pngs&#39;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb1-18\"&gt;&lt;a href=\"#cb1-18\"&gt;&lt;/a&gt;    svgdir &lt;span class=\"op\"&gt;=&lt;/span&gt; Path(outdir).joinpath(&lt;span class=\"st\"&gt;&#39;svgs&#39;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb1-19\"&gt;&lt;a href=\"#cb1-19\"&gt;&lt;/a&gt;    pngdir.mkdir(exist_ok&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;, parents&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb1-20\"&gt;&lt;a href=\"#cb1-20\"&gt;&lt;/a&gt;    svgdir.mkdir(exist_ok&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;, parents&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb1-21\"&gt;&lt;a href=\"#cb1-21\"&gt;&lt;/a&gt;    pngfile &lt;span class=\"op\"&gt;=&lt;/span&gt; pngdir.joinpath(&lt;span class=\"ss\"&gt;f&#39;&lt;/span&gt;&lt;span class=\"sc\"&gt;{&lt;/span&gt;fname&lt;span class=\"sc\"&gt;}&lt;/span&gt;&lt;span class=\"ss\"&gt;.png&#39;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb1-22\"&gt;&lt;a href=\"#cb1-22\"&gt;&lt;/a&gt;    svgfile &lt;span class=\"op\"&gt;=&lt;/span&gt; svgdir.joinpath(&lt;span class=\"ss\"&gt;f&#39;&lt;/span&gt;&lt;span class=\"sc\"&gt;{&lt;/span&gt;fname&lt;span class=\"sc\"&gt;}&lt;/span&gt;&lt;span class=\"ss\"&gt;.svg&#39;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb1-23\"&gt;&lt;a href=\"#cb1-23\"&gt;&lt;/a&gt;    _ &lt;span class=\"op\"&gt;=&lt;/span&gt; plt.savefig(pngfile, dpi&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;400&lt;/span&gt;, bbox_inches&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&#39;tight&#39;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb1-24\"&gt;&lt;a href=\"#cb1-24\"&gt;&lt;/a&gt;    _ &lt;span class=\"op\"&gt;=&lt;/span&gt; plt.savefig(svgfile, dpi&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;400&lt;/span&gt;, bbox_inches&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&#39;tight&#39;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;div class=\"cell\" data-execution_count=\"2\"&gt;\n&lt;div class=\"sourceCode\" id=\"cb2\"&gt;&lt;pre class=\"sourceCode numberSource python cell-code number-lines\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb2-1\"&gt;&lt;a href=\"#cb2-1\"&gt;&lt;/a&gt;gpus &lt;span class=\"op\"&gt;=&lt;/span&gt; (&lt;span class=\"st\"&gt;&#39;32&#39;&lt;/span&gt;, &lt;span class=\"st\"&gt;&#39;64&#39;&lt;/span&gt;, &lt;span class=\"st\"&gt;&#39;128&#39;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb2-2\"&gt;&lt;a href=\"#cb2-2\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb2-3\"&gt;&lt;a href=\"#cb2-3\"&gt;&lt;/a&gt;data &lt;span class=\"op\"&gt;=&lt;/span&gt; {&lt;/span&gt;\n&lt;span id=\"cb2-4\"&gt;&lt;a href=\"#cb2-4\"&gt;&lt;/a&gt;    &lt;span class=\"st\"&gt;&#39;25B&#39;&lt;/span&gt;: {&lt;/span&gt;\n&lt;span id=\"cb2-5\"&gt;&lt;a href=\"#cb2-5\"&gt;&lt;/a&gt;        &lt;span class=\"st\"&gt;&#39;Old&#39;&lt;/span&gt;: (&lt;span class=\"dv\"&gt;28&lt;/span&gt;, &lt;span class=\"dv\"&gt;32&lt;/span&gt;, &lt;span class=\"dv\"&gt;32&lt;/span&gt;),&lt;/span&gt;\n&lt;span id=\"cb2-6\"&gt;&lt;a href=\"#cb2-6\"&gt;&lt;/a&gt;        &lt;span class=\"st\"&gt;&#39;Nvidia&#39;&lt;/span&gt;: (&lt;span class=\"dv\"&gt;14&lt;/span&gt;, &lt;span class=\"dv\"&gt;46&lt;/span&gt;, &lt;span class=\"dv\"&gt;52&lt;/span&gt;),&lt;/span&gt;\n&lt;span id=\"cb2-7\"&gt;&lt;a href=\"#cb2-7\"&gt;&lt;/a&gt;        &lt;span class=\"st\"&gt;&#39;New&#39;&lt;/span&gt;: (&lt;span class=\"dv\"&gt;128&lt;/span&gt;, &lt;span class=\"dv\"&gt;384&lt;/span&gt;, &lt;span class=\"dv\"&gt;448&lt;/span&gt;),&lt;/span&gt;\n&lt;span id=\"cb2-8\"&gt;&lt;a href=\"#cb2-8\"&gt;&lt;/a&gt;    },&lt;/span&gt;\n&lt;span id=\"cb2-9\"&gt;&lt;a href=\"#cb2-9\"&gt;&lt;/a&gt;    &lt;span class=\"st\"&gt;&#39;33B&#39;&lt;/span&gt;: {&lt;/span&gt;\n&lt;span id=\"cb2-10\"&gt;&lt;a href=\"#cb2-10\"&gt;&lt;/a&gt;        &lt;span class=\"st\"&gt;&#39;Old&#39;&lt;/span&gt;: (&lt;span class=\"dv\"&gt;36&lt;/span&gt;, &lt;span class=\"dv\"&gt;42&lt;/span&gt;, &lt;span class=\"dv\"&gt;42&lt;/span&gt;),&lt;/span&gt;\n&lt;span id=\"cb2-11\"&gt;&lt;a href=\"#cb2-11\"&gt;&lt;/a&gt;        &lt;span class=\"st\"&gt;&#39;Nvidia&#39;&lt;/span&gt;: (&lt;span class=\"dv\"&gt;26&lt;/span&gt;, &lt;span class=\"dv\"&gt;48&lt;/span&gt;, &lt;span class=\"dv\"&gt;52&lt;/span&gt;),&lt;/span&gt;\n&lt;span id=\"cb2-12\"&gt;&lt;a href=\"#cb2-12\"&gt;&lt;/a&gt;        &lt;span class=\"st\"&gt;&#39;New&#39;&lt;/span&gt;: (&lt;span class=\"dv\"&gt;192&lt;/span&gt;, &lt;span class=\"dv\"&gt;448&lt;/span&gt;, &lt;span class=\"dv\"&gt;512&lt;/span&gt;),&lt;/span&gt;\n&lt;span id=\"cb2-13\"&gt;&lt;a href=\"#cb2-13\"&gt;&lt;/a&gt;    }&lt;/span&gt;\n&lt;span id=\"cb2-14\"&gt;&lt;a href=\"#cb2-14\"&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;div id=\"fig-seq-len\" class=\"quarto-figure quarto-figure-center\"&gt;\n&lt;figure&gt;\n&lt;div&gt;\n&lt;div class=\"sourceCode\" id=\"cb3\"&gt;&lt;pre class=\"sourceCode numberSource python cell-code number-lines\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb3-1\"&gt;&lt;a href=\"#cb3-1\"&gt;&lt;/a&gt;x &lt;span class=\"op\"&gt;=&lt;/span&gt; np.arange(&lt;span class=\"bu\"&gt;len&lt;/span&gt;(gpus))&lt;/span&gt;\n&lt;span id=\"cb3-2\"&gt;&lt;a href=\"#cb3-2\"&gt;&lt;/a&gt;width &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"fl\"&gt;0.25&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb3-3\"&gt;&lt;a href=\"#cb3-3\"&gt;&lt;/a&gt;multiplier &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"dv\"&gt;0&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb3-4\"&gt;&lt;a href=\"#cb3-4\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb3-5\"&gt;&lt;a href=\"#cb3-5\"&gt;&lt;/a&gt;outdir &lt;span class=\"op\"&gt;=&lt;/span&gt; Path(os.getcwd()).joinpath(&lt;span class=\"st\"&gt;&#39;assets&#39;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb3-6\"&gt;&lt;a href=\"#cb3-6\"&gt;&lt;/a&gt;outdir.mkdir(exist_ok&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;, parents&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb3-7\"&gt;&lt;a href=\"#cb3-7\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb3-8\"&gt;&lt;a href=\"#cb3-8\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;from&lt;/span&gt; toolbox &lt;span class=\"im\"&gt;import&lt;/span&gt; COLORS&lt;/span&gt;\n&lt;span id=\"cb3-9\"&gt;&lt;a href=\"#cb3-9\"&gt;&lt;/a&gt;colors &lt;span class=\"op\"&gt;=&lt;/span&gt; {&lt;/span&gt;\n&lt;span id=\"cb3-10\"&gt;&lt;a href=\"#cb3-10\"&gt;&lt;/a&gt;    &lt;span class=\"st\"&gt;&#39;Old&#39;&lt;/span&gt;: COLORS[&lt;span class=\"st\"&gt;&#39;red&#39;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb3-11\"&gt;&lt;a href=\"#cb3-11\"&gt;&lt;/a&gt;    &lt;span class=\"st\"&gt;&#39;Nvidia&#39;&lt;/span&gt;: COLORS[&lt;span class=\"st\"&gt;&#39;green&#39;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb3-12\"&gt;&lt;a href=\"#cb3-12\"&gt;&lt;/a&gt;    &lt;span class=\"st\"&gt;&#39;New&#39;&lt;/span&gt;: COLORS[&lt;span class=\"st\"&gt;&#39;blue&#39;&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb3-13\"&gt;&lt;a href=\"#cb3-13\"&gt;&lt;/a&gt;}&lt;/span&gt;\n&lt;span id=\"cb3-14\"&gt;&lt;a href=\"#cb3-14\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;for&lt;/span&gt; model_size, d &lt;span class=\"kw\"&gt;in&lt;/span&gt; data.items():&lt;/span&gt;\n&lt;span id=\"cb3-15\"&gt;&lt;a href=\"#cb3-15\"&gt;&lt;/a&gt;    multiplier &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"dv\"&gt;0&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb3-16\"&gt;&lt;a href=\"#cb3-16\"&gt;&lt;/a&gt;    figure, axes &lt;span class=\"op\"&gt;=&lt;/span&gt; plt.subplots(layout&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&#39;constrained&#39;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb3-17\"&gt;&lt;a href=\"#cb3-17\"&gt;&lt;/a&gt;    fig &lt;span class=\"op\"&gt;=&lt;/span&gt; plt.gcf()&lt;/span&gt;\n&lt;span id=\"cb3-18\"&gt;&lt;a href=\"#cb3-18\"&gt;&lt;/a&gt;    ax &lt;span class=\"op\"&gt;=&lt;/span&gt; plt.gca()&lt;/span&gt;\n&lt;span id=\"cb3-19\"&gt;&lt;a href=\"#cb3-19\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;for&lt;/span&gt; label, value &lt;span class=\"kw\"&gt;in&lt;/span&gt; d.items():&lt;/span&gt;\n&lt;span id=\"cb3-20\"&gt;&lt;a href=\"#cb3-20\"&gt;&lt;/a&gt;        offset &lt;span class=\"op\"&gt;=&lt;/span&gt; width &lt;span class=\"op\"&gt;*&lt;/span&gt; multiplier&lt;/span&gt;\n&lt;span id=\"cb3-21\"&gt;&lt;a href=\"#cb3-21\"&gt;&lt;/a&gt;        rects &lt;span class=\"op\"&gt;=&lt;/span&gt; ax.bar(x &lt;span class=\"op\"&gt;+&lt;/span&gt; offset, value, width, label&lt;span class=\"op\"&gt;=&lt;/span&gt;label, color&lt;span class=\"op\"&gt;=&lt;/span&gt;colors[label])&lt;/span&gt;\n&lt;span id=\"cb3-22\"&gt;&lt;a href=\"#cb3-22\"&gt;&lt;/a&gt;        ax.bar_label(rects, padding&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;3&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb3-23\"&gt;&lt;a href=\"#cb3-23\"&gt;&lt;/a&gt;        multiplier &lt;span class=\"op\"&gt;+=&lt;/span&gt; &lt;span class=\"dv\"&gt;1&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb3-24\"&gt;&lt;a href=\"#cb3-24\"&gt;&lt;/a&gt;    ax.set_ylabel(&lt;span class=\"st\"&gt;&#39;Sequence Length (k)&#39;&lt;/span&gt;, fontsize&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&#39;large&#39;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb3-25\"&gt;&lt;a href=\"#cb3-25\"&gt;&lt;/a&gt;    ax.set_xlabel(&lt;span class=\"st\"&gt;&#39;GPUs&#39;&lt;/span&gt;, fontsize&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&#39;large&#39;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb3-26\"&gt;&lt;a href=\"#cb3-26\"&gt;&lt;/a&gt;    ax.set_title(&lt;span class=\"ss\"&gt;f&#39;&lt;/span&gt;&lt;span class=\"sc\"&gt;{&lt;/span&gt;model_size&lt;span class=\"sc\"&gt;}&lt;/span&gt;&lt;span class=\"ss\"&gt; Model&#39;&lt;/span&gt;, fontsize&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&#39;large&#39;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb3-27\"&gt;&lt;a href=\"#cb3-27\"&gt;&lt;/a&gt;    ax.set_xticks(x &lt;span class=\"op\"&gt;+&lt;/span&gt; width, gpus)&lt;/span&gt;\n&lt;span id=\"cb3-28\"&gt;&lt;a href=\"#cb3-28\"&gt;&lt;/a&gt;    ax.legend(loc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&#39;best&#39;&lt;/span&gt;, ncols&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;1&lt;/span&gt;, frameon&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb3-29\"&gt;&lt;a href=\"#cb3-29\"&gt;&lt;/a&gt;    save_figure(fname&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"ss\"&gt;f&#39;&lt;/span&gt;&lt;span class=\"sc\"&gt;{&lt;/span&gt;model_size&lt;span class=\"sc\"&gt;}&lt;/span&gt;&lt;span class=\"ss\"&gt;&#39;&lt;/span&gt;, outdir&lt;span class=\"op\"&gt;=&lt;/span&gt;outdir)&lt;/span&gt;\n&lt;span id=\"cb3-30\"&gt;&lt;a href=\"#cb3-30\"&gt;&lt;/a&gt;    _ &lt;span class=\"op\"&gt;=&lt;/span&gt; plt.show()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;div class=\"cell quarto-layout-panel\" data-execution_count=\"3\"&gt;\n&lt;div class=\"quarto-layout-row quarto-layout-valign-top\"&gt;\n&lt;div class=\"cell-output cell-output-display quarto-layout-cell\" style=\"flex-basis: 50.0%;justify-content: center;\"&gt;\n&lt;div class=\"quarto-figure quarto-figure-center\"&gt;\n&lt;figure&gt;\n&lt;p&gt;&lt;img src=\"dsblog_files/figure-html/cell-4-output-1.png\" class=\"img-fluid\" width=\"683\" /&gt;&lt;/p&gt;\n&lt;figcaption&gt;25B&lt;/figcaption&gt;\n&lt;/figure&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display quarto-layout-cell\" style=\"flex-basis: 50.0%;justify-content: center;\"&gt;\n&lt;div class=\"quarto-figure quarto-figure-center\"&gt;\n&lt;figure&gt;\n&lt;p&gt;&lt;img src=\"dsblog_files/figure-html/cell-4-output-2.png\" class=\"img-fluid\" width=\"683\" /&gt;&lt;/p&gt;\n&lt;figcaption&gt;&lt;code&gt;33B&lt;/code&gt; Model&lt;/figcaption&gt;\n&lt;/figure&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;figcaption&gt;Figure¬†2: Maximum Sequence Lengths Achievable across different implementations, model sizes and GPUs.&lt;br /&gt;\nIn each case, the &lt;code&gt;new&lt;/code&gt; (current) implementation &lt;strong&gt;significantly&lt;/strong&gt; outperforms both NVIDIA/Megatron-LM as well as our previous implementation.&lt;/figcaption&gt;\n&lt;/figure&gt;\n&lt;/div&gt;\n&lt;div id=\"fig-table\" class=\"quarto-figure quarto-figure-center\"&gt;\n&lt;figure&gt;\n&lt;div class=\"cell\" data-execution_count=\"4\"&gt;\n&lt;div class=\"sourceCode\" id=\"cb4\"&gt;&lt;pre class=\"sourceCode numberSource python cell-code number-lines\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb4-1\"&gt;&lt;a href=\"#cb4-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; pandas &lt;span class=\"im\"&gt;as&lt;/span&gt; pd&lt;/span&gt;\n&lt;span id=\"cb4-2\"&gt;&lt;a href=\"#cb4-2\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;from&lt;/span&gt; toolbox &lt;span class=\"im\"&gt;import&lt;/span&gt; get_console&lt;/span&gt;\n&lt;span id=\"cb4-3\"&gt;&lt;a href=\"#cb4-3\"&gt;&lt;/a&gt;console &lt;span class=\"op\"&gt;=&lt;/span&gt; get_console()&lt;/span&gt;\n&lt;span id=\"cb4-4\"&gt;&lt;a href=\"#cb4-4\"&gt;&lt;/a&gt;df &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.read_csv(&lt;span class=\"st\"&gt;&#39;./data.csv&#39;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb4-5\"&gt;&lt;a href=\"#cb4-5\"&gt;&lt;/a&gt;df&lt;/span&gt;\n&lt;span id=\"cb4-6\"&gt;&lt;a href=\"#cb4-6\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;# pd.DataFrame(data)&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb4-7\"&gt;&lt;a href=\"#cb4-7\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;# console.print(df)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\" data-execution_count=\"14\"&gt;\n&lt;div&gt;\n&lt;style scoped&gt;\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n&lt;/style&gt;\n\n&lt;table class=\"dataframe\" data-quarto-postprocess=\"true\" data-border=\"1\"&gt;\n&lt;thead&gt;\n&lt;tr class=\"header\" style=\"text-align: right;\"&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;MODEL_SIZE&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;GPUs&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;Implementation&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;SEQ_LEN (k)&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;Improvement&lt;/th&gt;\n&lt;/tr&gt;\n&lt;/thead&gt;\n&lt;tbody&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;0&lt;/td&gt;\n&lt;td&gt;25B&lt;/td&gt;\n&lt;td&gt;32&lt;/td&gt;\n&lt;td&gt;OLD&lt;/td&gt;\n&lt;td&gt;28&lt;/td&gt;\n&lt;td&gt;4.571429&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"even\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;1&lt;/td&gt;\n&lt;td&gt;25B&lt;/td&gt;\n&lt;td&gt;32&lt;/td&gt;\n&lt;td&gt;NVIDIA&lt;/td&gt;\n&lt;td&gt;14&lt;/td&gt;\n&lt;td&gt;9.142857&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;2&lt;/td&gt;\n&lt;td&gt;25B&lt;/td&gt;\n&lt;td&gt;32&lt;/td&gt;\n&lt;td&gt;NEW&lt;/td&gt;\n&lt;td&gt;128&lt;/td&gt;\n&lt;td&gt;1.000000&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"even\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;3&lt;/td&gt;\n&lt;td&gt;25B&lt;/td&gt;\n&lt;td&gt;64&lt;/td&gt;\n&lt;td&gt;OLD&lt;/td&gt;\n&lt;td&gt;32&lt;/td&gt;\n&lt;td&gt;12.000000&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;4&lt;/td&gt;\n&lt;td&gt;25B&lt;/td&gt;\n&lt;td&gt;64&lt;/td&gt;\n&lt;td&gt;NVIDIA&lt;/td&gt;\n&lt;td&gt;46&lt;/td&gt;\n&lt;td&gt;8.347826&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"even\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;5&lt;/td&gt;\n&lt;td&gt;25B&lt;/td&gt;\n&lt;td&gt;64&lt;/td&gt;\n&lt;td&gt;NEW&lt;/td&gt;\n&lt;td&gt;384&lt;/td&gt;\n&lt;td&gt;1.000000&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;6&lt;/td&gt;\n&lt;td&gt;25B&lt;/td&gt;\n&lt;td&gt;128&lt;/td&gt;\n&lt;td&gt;OLD&lt;/td&gt;\n&lt;td&gt;32&lt;/td&gt;\n&lt;td&gt;14.000000&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"even\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;7&lt;/td&gt;\n&lt;td&gt;25B&lt;/td&gt;\n&lt;td&gt;128&lt;/td&gt;\n&lt;td&gt;NVIDIA&lt;/td&gt;\n&lt;td&gt;52&lt;/td&gt;\n&lt;td&gt;8.615385&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;8&lt;/td&gt;\n&lt;td&gt;25B&lt;/td&gt;\n&lt;td&gt;128&lt;/td&gt;\n&lt;td&gt;NEW&lt;/td&gt;\n&lt;td&gt;448&lt;/td&gt;\n&lt;td&gt;1.000000&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"even\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;9&lt;/td&gt;\n&lt;td&gt;33B&lt;/td&gt;\n&lt;td&gt;32&lt;/td&gt;\n&lt;td&gt;OLD&lt;/td&gt;\n&lt;td&gt;36&lt;/td&gt;\n&lt;td&gt;5.333333&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;10&lt;/td&gt;\n&lt;td&gt;33B&lt;/td&gt;\n&lt;td&gt;32&lt;/td&gt;\n&lt;td&gt;NVIDIA&lt;/td&gt;\n&lt;td&gt;26&lt;/td&gt;\n&lt;td&gt;7.384615&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"even\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;11&lt;/td&gt;\n&lt;td&gt;33B&lt;/td&gt;\n&lt;td&gt;32&lt;/td&gt;\n&lt;td&gt;NEW&lt;/td&gt;\n&lt;td&gt;192&lt;/td&gt;\n&lt;td&gt;1.000000&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;12&lt;/td&gt;\n&lt;td&gt;33B&lt;/td&gt;\n&lt;td&gt;64&lt;/td&gt;\n&lt;td&gt;OLD&lt;/td&gt;\n&lt;td&gt;42&lt;/td&gt;\n&lt;td&gt;10.666667&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"even\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;13&lt;/td&gt;\n&lt;td&gt;33B&lt;/td&gt;\n&lt;td&gt;64&lt;/td&gt;\n&lt;td&gt;NVIDIA&lt;/td&gt;\n&lt;td&gt;48&lt;/td&gt;\n&lt;td&gt;9.333333&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;14&lt;/td&gt;\n&lt;td&gt;33B&lt;/td&gt;\n&lt;td&gt;64&lt;/td&gt;\n&lt;td&gt;NEW&lt;/td&gt;\n&lt;td&gt;448&lt;/td&gt;\n&lt;td&gt;1.000000&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"even\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;15&lt;/td&gt;\n&lt;td&gt;33B&lt;/td&gt;\n&lt;td&gt;128&lt;/td&gt;\n&lt;td&gt;OLD&lt;/td&gt;\n&lt;td&gt;42&lt;/td&gt;\n&lt;td&gt;12.190476&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;16&lt;/td&gt;\n&lt;td&gt;33B&lt;/td&gt;\n&lt;td&gt;128&lt;/td&gt;\n&lt;td&gt;NVIDIA&lt;/td&gt;\n&lt;td&gt;52&lt;/td&gt;\n&lt;td&gt;9.846154&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"even\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;17&lt;/td&gt;\n&lt;td&gt;33B&lt;/td&gt;\n&lt;td&gt;128&lt;/td&gt;\n&lt;td&gt;NEW&lt;/td&gt;\n&lt;td&gt;512&lt;/td&gt;\n&lt;td&gt;1.000000&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/tbody&gt;\n&lt;/table&gt;\n\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;figcaption&gt;Figure¬†3: Maximum Sequence Length Results&lt;/figcaption&gt;\n&lt;/figure&gt;\n&lt;/div&gt;\n&lt;div id=\"quarto-navigation-envelope\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar-title\"&gt;Sam Foreman&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar-title\"&gt;Sam Foreman&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:[{{&lt; fa solid newspaper &gt;}}]{.red-text} Posts\"&gt;&lt;span class=\"red-text\"&gt;&lt;i class=\"fa-solid fa-newspaper\" aria-label=\"newspaper\"&gt;&lt;/i&gt;&lt;/span&gt; Posts&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:/qmd/posts.html\"&gt;/qmd/posts.html&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:[{{&lt; fa solid person-chalkboard &gt;}}]{.orange-text} Talks\"&gt;&lt;span class=\"orange-text\"&gt;&lt;i class=\"fa-solid fa-person-chalkboard\" aria-label=\"person-chalkboard\"&gt;&lt;/i&gt;&lt;/span&gt; Talks&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:/qmd/slides.html\"&gt;/qmd/slides.html&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:{{&lt; fa brands github &gt;}} `l2hmc-qcd`\"&gt;&lt;i class=\"fa-brands fa-github\" aria-label=\"github\"&gt;&lt;/i&gt; &lt;code&gt;l2hmc-qcd&lt;/code&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:https://saforem2.github.io/l2hmc-qcd\"&gt;https://saforem2.github.io/l2hmc-qcd&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:https://github.com/saforem2/saforem2.github.io\"&gt;https://github.com/saforem2/saforem2.github.io&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-left-https://saforem2.github.io\"&gt;saforem2.github.io&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-center\"&gt;Copyright 2023, Sam Foreman&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-right-https://samforeman.me\"&gt;&lt;i class=\"fa-solid fa-home\" aria-label=\"home\"&gt;&lt;/i&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-right-mailto:///foremans@anl.gov\"&gt;&lt;i class=\"fa-regular fa-paper-plane\" aria-label=\"paper-plane\"&gt;&lt;/i&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-right-https://www.twitter.com/saforem2\"&gt;&lt;i class=\"fa-brands fa-twitter\" aria-label=\"twitter\"&gt;&lt;/i&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-right-https://scholar.google.com/citations?user=vV_1zDwAAAAJ&amp;hl=en\"&gt;&lt;i class=\"ai  ai-google-scholar\"&gt;&lt;/i&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-right-https://orcid.org/0000-0002-9981-0876\"&gt;&lt;i class=\"ai  ai-orcid\"&gt;&lt;/i&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-right-https://www.last.fm/user/saforem2\"&gt;&lt;i class=\"fa-brands fa-lastfm\" aria-label=\"lastfm\"&gt;&lt;/i&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-right-https://open.spotify.com/user/saforem2\"&gt;&lt;i class=\"fa-brands fa-spotify\" aria-label=\"spotify\"&gt;&lt;/i&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-right-https://www.instagram.com/saforem2\"&gt;&lt;i class=\"fa-brands fa-instagram\" aria-label=\"instagram\"&gt;&lt;/i&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-right-https://linkedin.com/in/saforem2\"&gt;&lt;i class=\"fa-brands fa-linkedin\" aria-label=\"linkedin\"&gt;&lt;/i&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;div id=\"quarto-meta-markdown\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-metatitle\"&gt;Sam Foreman - Long Sequence Lengths&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercardtitle\"&gt;Sam Foreman - Long Sequence Lengths&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardtitle\"&gt;Sam Foreman - Long Sequence Lengths&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-metasitename\"&gt;Sam Foreman&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercarddesc\"&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardddesc\"&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;/section&gt;\n\n&lt;/main&gt; &lt;!-- /main --&gt;\n&lt;script id = \"quarto-html-after-body\" type=\"application/javascript\"&gt;\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) =&gt; {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () =&gt; {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const disableStylesheet = (stylesheets) =&gt; {\n    for (let i=0; i &lt; stylesheets.length; i++) {\n      const stylesheet = stylesheets[i];\n      stylesheet.rel = 'prefetch';\n    }\n  }\n  const enableStylesheet = (stylesheets) =&gt; {\n    for (let i=0; i &lt; stylesheets.length; i++) {\n      const stylesheet = stylesheets[i];\n      stylesheet.rel = 'stylesheet';\n    }\n  }\n  const manageTransitions = (selector, allowTransitions) =&gt; {\n    const els = window.document.querySelectorAll(selector);\n    for (let i=0; i &lt; els.length; i++) {\n      const el = els[i];\n      if (allowTransitions) {\n        el.classList.remove('notransition');\n      } else {\n        el.classList.add('notransition');\n      }\n    }\n  }\n  const toggleColorMode = (alternate) =&gt; {\n    // Switch the stylesheets\n    const alternateStylesheets = window.document.querySelectorAll('link.quarto-color-scheme.quarto-color-alternate');\n    manageTransitions('#quarto-margin-sidebar .nav-link', false);\n    if (alternate) {\n      enableStylesheet(alternateStylesheets);\n      for (const sheetNode of alternateStylesheets) {\n        if (sheetNode.id === \"quarto-bootstrap\") {\n          toggleBodyColorMode(sheetNode);\n        }\n      }\n    } else {\n      disableStylesheet(alternateStylesheets);\n      toggleBodyColorPrimary();\n    }\n    manageTransitions('#quarto-margin-sidebar .nav-link', true);\n    // Switch the toggles\n    const toggles = window.document.querySelectorAll('.quarto-color-scheme-toggle');\n    for (let i=0; i &lt; toggles.length; i++) {\n      const toggle = toggles[i];\n      if (toggle) {\n        if (alternate) {\n          toggle.classList.add(\"alternate\");     \n        } else {\n          toggle.classList.remove(\"alternate\");\n        }\n      }\n    }\n    // Hack to workaround the fact that safari doesn't\n    // properly recolor the scrollbar when toggling (#1455)\n    if (navigator.userAgent.indexOf('Safari') &gt; 0 && navigator.userAgent.indexOf('Chrome') == -1) {\n      manageTransitions(\"body\", false);\n      window.scrollTo(0, 1);\n      setTimeout(() =&gt; {\n        window.scrollTo(0, 0);\n        manageTransitions(\"body\", true);\n      }, 40);  \n    }\n  }\n  const isFileUrl = () =&gt; { \n    return window.location.protocol === 'file:';\n  }\n  const hasAlternateSentinel = () =&gt; {  \n    let styleSentinel = getColorSchemeSentinel();\n    if (styleSentinel !== null) {\n      return styleSentinel === \"alternate\";\n    } else {\n      return false;\n    }\n  }\n  const setStyleSentinel = (alternate) =&gt; {\n    const value = alternate ? \"alternate\" : \"default\";\n    if (!isFileUrl()) {\n      window.localStorage.setItem(\"quarto-color-scheme\", value);\n    } else {\n      localAlternateSentinel = value;\n    }\n  }\n  const getColorSchemeSentinel = () =&gt; {\n    if (!isFileUrl()) {\n      const storageValue = window.localStorage.getItem(\"quarto-color-scheme\");\n      return storageValue != null ? storageValue : localAlternateSentinel;\n    } else {\n      return localAlternateSentinel;\n    }\n  }\n  let localAlternateSentinel = 'alternate';\n  // Dark / light mode switch\n  window.quartoToggleColorScheme = () =&gt; {\n    // Read the current dark / light value \n    let toAlternate = !hasAlternateSentinel();\n    toggleColorMode(toAlternate);\n    setStyleSentinel(toAlternate);\n  };\n  // Ensure there is a toggle, if there isn't float one in the top right\n  if (window.document.querySelector('.quarto-color-scheme-toggle') === null) {\n    const a = window.document.createElement('a');\n    a.classList.add('top-right');\n    a.classList.add('quarto-color-scheme-toggle');\n    a.href = \"\";\n    a.onclick = function() { try { window.quartoToggleColorScheme(); } catch {} return false; };\n    const i = window.document.createElement(\"i\");\n    i.classList.add('bi');\n    a.appendChild(i);\n    window.document.body.appendChild(a);\n  }\n  // Switch to dark mode if need be\n  if (hasAlternateSentinel()) {\n    toggleColorMode(true);\n  } else {\n    toggleColorMode(false);\n  }\n  const icon = \"Óßã\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const isCodeAnnotation = (el) =&gt; {\n    for (const clz of el.classList) {\n      if (clz.startsWith('code-annotation-')) {                     \n        return true;\n      }\n    }\n    return false;\n  }\n  const clipboard = new window.ClipboardJS('.code-copy-button', {\n    text: function(trigger) {\n      const codeEl = trigger.previousElementSibling.cloneNode(true);\n      for (const childEl of codeEl.children) {\n        if (isCodeAnnotation(childEl)) {\n          childEl.remove();\n        }\n      }\n      return codeEl.innerText;\n    }\n  });\n  clipboard.on('success', function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    let tooltip;\n    if (window.bootstrap) {\n      button.setAttribute(\"data-bs-toggle\", \"tooltip\");\n      button.setAttribute(\"data-bs-placement\", \"left\");\n      button.setAttribute(\"data-bs-title\", \"Copied!\");\n      tooltip = new bootstrap.Tooltip(button, \n        { trigger: \"manual\", \n          customClass: \"code-copy-button-tooltip\",\n          offset: [0, -8]});\n      tooltip.show();    \n    }\n    setTimeout(function() {\n      if (tooltip) {\n        tooltip.hide();\n        button.removeAttribute(\"data-bs-title\");\n        button.removeAttribute(\"data-bs-toggle\");\n        button.removeAttribute(\"data-bs-placement\");\n      }\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  });\n  function tippyHover(el, contentFn) {\n    const config = {\n      allowHTML: true,\n      content: contentFn,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start'\n    };\n    window.tippy(el, config); \n  }\n  const noterefs = window.document.querySelectorAll('a[role=\"doc-noteref\"]');\n  for (var i=0; i&lt;noterefs.length; i++) {\n    const ref = noterefs[i];\n    tippyHover(ref, function() {\n      // use id or data attribute instead here\n      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');\n      try { href = new URL(href).hash; } catch {}\n      const id = href.replace(/^#\\/?/, \"\");\n      const note = window.document.getElementById(id);\n      return note.innerHTML;\n    });\n  }\n      let selectedAnnoteEl;\n      const selectorForAnnotation = ( cell, annotation) =&gt; {\n        let cellAttr = 'data-code-cell=\"' + cell + '\"';\n        let lineAttr = 'data-code-annotation=\"' +  annotation + '\"';\n        const selector = 'span[' + cellAttr + '][' + lineAttr + ']';\n        return selector;\n      }\n      const selectCodeLines = (annoteEl) =&gt; {\n        const doc = window.document;\n        const targetCell = annoteEl.getAttribute(\"data-target-cell\");\n        const targetAnnotation = annoteEl.getAttribute(\"data-target-annotation\");\n        const annoteSpan = window.document.querySelector(selectorForAnnotation(targetCell, targetAnnotation));\n        const lines = annoteSpan.getAttribute(\"data-code-lines\").split(\",\");\n        const lineIds = lines.map((line) =&gt; {\n          return targetCell + \"-\" + line;\n        })\n        let top = null;\n        let height = null;\n        let parent = null;\n        if (lineIds.length &gt; 0) {\n            //compute the position of the single el (top and bottom and make a div)\n            const el = window.document.getElementById(lineIds[0]);\n            top = el.offsetTop;\n            height = el.offsetHeight;\n            parent = el.parentElement.parentElement;\n          if (lineIds.length &gt; 1) {\n            const lastEl = window.document.getElementById(lineIds[lineIds.length - 1]);\n            const bottom = lastEl.offsetTop + lastEl.offsetHeight;\n            height = bottom - top;\n          }\n          if (top !== null && height !== null && parent !== null) {\n            // cook up a div (if necessary) and position it \n            let div = window.document.getElementById(\"code-annotation-line-highlight\");\n            if (div === null) {\n              div = window.document.createElement(\"div\");\n              div.setAttribute(\"id\", \"code-annotation-line-highlight\");\n              div.style.position = 'absolute';\n              parent.appendChild(div);\n            }\n            div.style.top = top - 2 + \"px\";\n            div.style.height = height + 4 + \"px\";\n            let gutterDiv = window.document.getElementById(\"code-annotation-line-highlight-gutter\");\n            if (gutterDiv === null) {\n              gutterDiv = window.document.createElement(\"div\");\n              gutterDiv.setAttribute(\"id\", \"code-annotation-line-highlight-gutter\");\n              gutterDiv.style.position = 'absolute';\n              const codeCell = window.document.getElementById(targetCell);\n              const gutter = codeCell.querySelector('.code-annotation-gutter');\n              gutter.appendChild(gutterDiv);\n            }\n            gutterDiv.style.top = top - 2 + \"px\";\n            gutterDiv.style.height = height + 4 + \"px\";\n          }\n          selectedAnnoteEl = annoteEl;\n        }\n      };\n      const unselectCodeLines = () =&gt; {\n        const elementsIds = [\"code-annotation-line-highlight\", \"code-annotation-line-highlight-gutter\"];\n        elementsIds.forEach((elId) =&gt; {\n          const div = window.document.getElementById(elId);\n          if (div) {\n            div.remove();\n          }\n        });\n        selectedAnnoteEl = undefined;\n      };\n      // Attach click handler to the DT\n      const annoteDls = window.document.querySelectorAll('dt[data-target-cell]');\n      for (const annoteDlNode of annoteDls) {\n        annoteDlNode.addEventListener('click', (event) =&gt; {\n          const clickedEl = event.target;\n          if (clickedEl !== selectedAnnoteEl) {\n            unselectCodeLines();\n            const activeEl = window.document.querySelector('dt[data-target-cell].code-annotation-active');\n            if (activeEl) {\n              activeEl.classList.remove('code-annotation-active');\n            }\n            selectCodeLines(clickedEl);\n            clickedEl.classList.add('code-annotation-active');\n          } else {\n            // Unselect the line\n            unselectCodeLines();\n            clickedEl.classList.remove('code-annotation-active');\n          }\n        });\n      }\n  const findCites = (el) =&gt; {\n    const parentEl = el.parentElement;\n    if (parentEl) {\n      const cites = parentEl.dataset.cites;\n      if (cites) {\n        return {\n          el,\n          cites: cites.split(' ')\n        };\n      } else {\n        return findCites(el.parentElement)\n      }\n    } else {\n      return undefined;\n    }\n  };\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i&lt;bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const citeInfo = findCites(ref);\n    if (citeInfo) {\n      tippyHover(citeInfo.el, function() {\n        var popup = window.document.createElement('div');\n        citeInfo.cites.forEach(function(cite) {\n          var citeDiv = window.document.createElement('div');\n          citeDiv.classList.add('hanging-indent');\n          citeDiv.classList.add('csl-entry');\n          var biblioDiv = window.document.getElementById('ref-' + cite);\n          if (biblioDiv) {\n            citeDiv.innerHTML = biblioDiv.innerHTML;\n          }\n          popup.appendChild(citeDiv);\n        });\n        return popup.innerHTML;\n      });\n    }\n  }\n});\n&lt;/script&gt;\n&lt;/div&gt; &lt;!-- /content --&gt;\n&lt;footer class=\"footer\"&gt;\n  &lt;div class=\"nav-footer\"&gt;\n    &lt;div class=\"nav-footer-left\"&gt;\n      &lt;ul class=\"footer-items list-unstyled\"&gt;\n    &lt;li class=\"nav-item\"&gt;\n    &lt;a class=\"nav-link\" href=\"https://saforem2.github.io\"&gt;\n saforem2.github.io\n    &lt;/a&gt;\n  &lt;/li&gt;  \n&lt;/ul&gt;\n    &lt;/div&gt;   \n    &lt;div class=\"nav-footer-center\"&gt;\n      &lt;div class='footer-contents'&gt;Copyright 2023, Sam Foreman&lt;/div&gt;  \n    &lt;/div&gt;\n    &lt;div class=\"nav-footer-right\"&gt;\n      &lt;ul class=\"footer-items list-unstyled\"&gt;\n    &lt;li class=\"nav-item\"&gt;\n    &lt;a class=\"nav-link\" href=\"https://samforeman.me\"&gt;\n \n    &lt;/a&gt;\n  &lt;/li&gt;  \n    &lt;li class=\"nav-item compact\"&gt;\n    &lt;a class=\"nav-link\" href=\"https://github.com/saforem2\"&gt;\n      &lt;i \n  class=\"bi bi-github\" \n  role=\"img\" \n&gt;\n&lt;/i&gt; \n    &lt;/a&gt;\n  &lt;/li&gt;  \n    &lt;li class=\"nav-item compact\"&gt;\n    &lt;a class=\"nav-link\" href=\"https://twitter.com/saforem2\"&gt;\n      &lt;i \n  class=\"bi bi-twitter\" \n  role=\"img\" \n&gt;\n&lt;/i&gt; \n    &lt;/a&gt;\n  &lt;/li&gt;  \n    &lt;li class=\"nav-item\"&gt;\n    &lt;a class=\"nav-link\" href=\"mailto:///foremans@anl.gov\"&gt;\n \n    &lt;/a&gt;\n  &lt;/li&gt;  \n    &lt;li class=\"nav-item\"&gt;\n    &lt;a class=\"nav-link\" href=\"https://www.twitter.com/saforem2\"&gt;\n \n    &lt;/a&gt;\n  &lt;/li&gt;  \n    &lt;li class=\"nav-item\"&gt;\n    &lt;a class=\"nav-link\" href=\"https://scholar.google.com/citations?user=vV_1zDwAAAAJ&amp;hl=en\"&gt;\n \n    &lt;/a&gt;\n  &lt;/li&gt;  \n    &lt;li class=\"nav-item\"&gt;\n    &lt;a class=\"nav-link\" href=\"https://orcid.org/0000-0002-9981-0876\"&gt;\n \n    &lt;/a&gt;\n  &lt;/li&gt;  \n    &lt;li class=\"nav-item\"&gt;\n    &lt;a class=\"nav-link\" href=\"https://www.last.fm/user/saforem2\"&gt;\n \n    &lt;/a&gt;\n  &lt;/li&gt;  \n    &lt;li class=\"nav-item\"&gt;\n    &lt;a class=\"nav-link\" href=\"https://open.spotify.com/user/saforem2\"&gt;\n \n    &lt;/a&gt;\n  &lt;/li&gt;  \n    &lt;li class=\"nav-item\"&gt;\n    &lt;a class=\"nav-link\" href=\"https://www.instagram.com/saforem2\"&gt;\n \n    &lt;/a&gt;\n  &lt;/li&gt;  \n    &lt;li class=\"nav-item\"&gt;\n    &lt;a class=\"nav-link\" href=\"https://linkedin.com/in/saforem2\"&gt;\n \n    &lt;/a&gt;\n  &lt;/li&gt;  \n&lt;/ul&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/footer&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;"
  },
  {
    "objectID": "qmd/dsblog.html#new-results",
    "href": "qmd/dsblog.html#new-results",
    "title": "Loooooooong Sequence Lengths",
    "section": "New Results",
    "text": "New Results"
  },
  {
    "objectID": "qmd/dsblog.html#initial-results",
    "href": "qmd/dsblog.html#initial-results",
    "title": "Loooooooong Sequence Lengths",
    "section": "",
    "text": "PRE-RELEASE\n\n\n\n\n\nI‚Äôve kept in the (executable) code blocks for the time being (just to show how I‚Äôm generating the bar plots in Figure¬†1) but these can be ommitted in the actual README\n\n\n\n\ngpus = ('32', '64', '128')\n\ndata = {\n    '25B': {\n        'Old': (28, 32, 32),\n        'Nvidia': (14, 46, 52),\n        'New': (460, 384, 448),\n    },\n    '33B': {\n        'Old': (36, 42, 42),\n        'Nvidia': (26, 48, 52),\n        'New': (192, 448, 512),\n    }\n}\n\n\n\n\nx = np.arange(len(gpus))\nwidth = 0.25\nmultiplier = 0\n\noutdir = Path(os.getcwd()).joinpath('assets')\noutdir.mkdir(exist_ok=True, parents=True)\n\nfrom toolbox import COLORS\ncolors = {\n    'Old': COLORS['red'],\n    'Nvidia': COLORS['green'],\n    'New': COLORS['blue']\n}\nfor idx, (model_size, d) in enumerate(data.items()):\n    multiplier = 0\n    figure, axes = plt.subplots(layout='constrained')\n    fig = plt.gcf()\n    ax = plt.gca()\n    for label, value in d.items():\n        offset = width * multiplier\n        rects = ax.bar(x + offset, value, width, label=label, color=colors[label])\n        ax.bar_label(rects, padding=3)\n        multiplier += 1\n    ax.set_xlabel('GPUs', fontsize='large')\n    ax.set_title(f'{model_size} Model', fontsize='large')\n    ax.set_xticks(x + width, gpus)\n    if idx == 0:\n        ax.set_ylabel('Sequence Length (k)', fontsize='large')\n    if idx &gt; 0:\n        ax.legend(loc='best', ncols=1, frameon=True, bbox_to_anchor=(1, 1.05))\n    save_figure(fname=f'{model_size}', outdir=outdir)\n    _ = plt.show()\n\n\n\n\n\n\n25B Model\n\n\n\n\n\n\n\n33B Model\n\n\n\n\n\n\nFigure¬†1: Maximum Sequence Lengths Achievable across different implementations, model sizes and GPUs.\nIn each case, the new (current) implementation significantly outperforms both NVIDIA/Megatron-LM as well as our previous implementation.\n\n\n\n\n\nimport pandas as pd\nfrom toolbox import get_console\nconsole = get_console()\ndf = pd.read_csv('./data.csv')\ndf\n\n\n\n\n\n\n\n\nMODEL_SIZE\nGPUs\nImplementation\nSEQ_LEN (k)\nImprovement\n\n\n\n\n0\n25B\n32\nOLD\n28\n4.571429\n\n\n1\n25B\n32\nNVIDIA\n14\n9.142857\n\n\n2\n25B\n32\nNEW\n128\n1.000000\n\n\n3\n25B\n64\nOLD\n32\n12.000000\n\n\n4\n25B\n64\nNVIDIA\n46\n8.347826\n\n\n5\n25B\n64\nNEW\n384\n1.000000\n\n\n6\n25B\n128\nOLD\n32\n14.000000\n\n\n7\n25B\n128\nNVIDIA\n52\n8.615385\n\n\n8\n25B\n128\nNEW\n448\n1.000000\n\n\n9\n33B\n32\nOLD\n36\n5.333333\n\n\n10\n33B\n32\nNVIDIA\n26\n7.384615\n\n\n11\n33B\n32\nNEW\n192\n1.000000\n\n\n12\n33B\n64\nOLD\n42\n10.666667\n\n\n13\n33B\n64\nNVIDIA\n48\n9.333333\n\n\n14\n33B\n64\nNEW\n448\n1.000000\n\n\n15\n33B\n128\nOLD\n42\n12.190476\n\n\n16\n33B\n128\nNVIDIA\n52\n9.846154\n\n\n17\n33B\n128\nNEW\n512\n1.000000\n\n\n\n\n\n\n\nFigure¬†2: Maximum Sequence Length Results"
  },
  {
    "objectID": "qmd/projects.html",
    "href": "qmd/projects.html",
    "title": "How to make dope slides",
    "section": "",
    "text": "Projects\n\n l2hmc-qcd\n\n\n\n\n\n Back to topCitationBibTeX citation:@online{foreman2023,\n  author = {Foreman, Sam},\n  title = {Personal {Website}},\n  date = {2023-09-07},\n  url = {https://saforem2.github.io},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nForeman, Sam. 2023. ‚ÄúPersonal Website.‚Äù September 7, 2023.\nhttps://saforem2.github.io."
  }
]